-- MySQL Script generated by MySQL Workbench
-- Sun Apr  2 20:04:05 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema springproject
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `springproject` ;

-- -----------------------------------------------------
-- Schema springproject
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `springproject` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `springproject` ;

-- -----------------------------------------------------
-- Table `springproject`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`category` ;

CREATE TABLE IF NOT EXISTS `springproject`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`favorite`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`favorite` ;

CREATE TABLE IF NOT EXISTS `springproject`.`favorite` (
  `userId` INT NOT NULL,
  `productId` INT NOT NULL,
  PRIMARY KEY (`userId`, `productId`),
  INDEX `FK_favorites_users_idx` (`userId` ASC) VISIBLE,
  INDEX `FK_favorites_products_idx` (`productId` ASC) VISIBLE,
  CONSTRAINT `FK_favorites_products`
    FOREIGN KEY (`productId`)
    REFERENCES `springproject`.`product` (`id`),
  CONSTRAINT `FK_favorites_users`
    FOREIGN KEY (`userId`)
    REFERENCES `springproject`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`product` ;

CREATE TABLE IF NOT EXISTS `springproject`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `imagePath` VARCHAR(255) NOT NULL,
  `categoryid` INT NOT NULL,
  `price` DECIMAL(6,2) NOT NULL,
  `salesCount` INT NULL DEFAULT NULL,
  `isOnSale` TINYINT NULL DEFAULT NULL,
  `discountPercent` DECIMAL(10,0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `products_ibfk_1` (`categoryid` ASC) VISIBLE,
  CONSTRAINT `products_ibfk_2`
    FOREIGN KEY (`categoryid`)
    REFERENCES `springproject`.`category` (`id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 19
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`promotion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`promotion` ;

CREATE TABLE IF NOT EXISTS `springproject`.`promotion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `startDate` DATE NOT NULL,
  `endDate` DATE NULL DEFAULT NULL,
  `promotionTypeId` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `promotions_promotion_type_idx` (`promotionTypeId` ASC) VISIBLE,
  CONSTRAINT `promotions_promotion_type`
    FOREIGN KEY (`promotionTypeId`)
    REFERENCES `springproject`.`promotion_type` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`promotion_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`promotion_type` ;

CREATE TABLE IF NOT EXISTS `springproject`.`promotion_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`purchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`purchase` ;

CREATE TABLE IF NOT EXISTS `springproject`.`purchase` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `timeStamp` TIMESTAMP(6) NOT NULL,
  `total_price` DECIMAL(6,2) NOT NULL,
  `promotionId` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `purchase_users_idx` (`userId` ASC) INVISIBLE,
  INDEX `FK_purchase_promotions_idx` (`promotionId` ASC) INVISIBLE,
  CONSTRAINT `FK_purchase_promotions_2`
    FOREIGN KEY (`promotionId`)
    REFERENCES `springproject`.`promotion` (`id`),
  CONSTRAINT `FK_purchase_users_2`
    FOREIGN KEY (`userId`)
    REFERENCES `springproject`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`purchase_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`purchase_details` ;

CREATE TABLE IF NOT EXISTS `springproject`.`purchase_details` (
  `id` INT NOT NULL,
  `purchaseId` INT NULL DEFAULT NULL,
  `productId` INT NULL DEFAULT NULL,
  `quantity` INT NULL DEFAULT NULL,
  `price` DECIMAL(6,2) NULL DEFAULT NULL,
  `isOnSale` TINYINT NULL DEFAULT NULL,
  `discountPercent` DECIMAL(10,0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_purchase_details_purchase_idx` (`purchaseId` ASC) VISIBLE,
  INDEX `FK_purchase_products_idx` (`productId` ASC) VISIBLE,
  CONSTRAINT `FK_purchase_details_purchase`
    FOREIGN KEY (`purchaseId`)
    REFERENCES `springproject`.`purchase` (`id`),
  CONSTRAINT `FK_purchase_products`
    FOREIGN KEY (`productId`)
    REFERENCES `springproject`.`product` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`rating` ;

CREATE TABLE IF NOT EXISTS `springproject`.`rating` (
  `userId` INT NOT NULL,
  `productId` INT NOT NULL,
  `rating` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`userId`, `productId`),
  INDEX `FK_ratings_products_idx` (`productId` ASC) VISIBLE,
  CONSTRAINT `FK_ratings_products`
    FOREIGN KEY (`productId`)
    REFERENCES `springproject`.`product` (`id`),
  CONSTRAINT `FK_ratings_users`
    FOREIGN KEY (`userId`)
    REFERENCES `springproject`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`search_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`search_history` ;

CREATE TABLE IF NOT EXISTS `springproject`.`search_history` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `phrase` VARCHAR(255) NOT NULL,
  `timeStamp` TIMESTAMP(6) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_search_history_users` (`userId` ASC) VISIBLE,
  CONSTRAINT `FK_search_history_users`
    FOREIGN KEY (`userId`)
    REFERENCES `springproject`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `springproject`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `springproject`.`user` ;

CREATE TABLE IF NOT EXISTS `springproject`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `role` ENUM('CUSTOMER', 'ADMIN') NOT NULL DEFAULT 'CUSTOMER',
  `email` VARCHAR(320) NOT NULL,
  `address` VARCHAR(1000) NULL DEFAULT NULL,
  `phone` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


INSERT INTO `user` (`username`, `password`, `role`, `email`, `address`, `phone`) VALUES
('jay', '123', 'CUSTOMER', 'gajerajay9@gmail.com', '4 Privet Drive', '999-999-9999'),
('admin', '123', 'ADMIN', '20ceuos042@ddu.ac.in', '10 Sussex Drive', '888-888-8888');

INSERT INTO `springproject`.`product`
(`name`, `description`, `imagePath`, `categoryid`, `price`, `salesCount`, `isOnSale`, `discountPercent`)
VALUES
  ('Sample Product', 'This is a sample product description.', '/images/sample-product.jpg', 1, 24.99, 0, 1, 0.10),
  ('Pepperoni Pizza', 'A classic pizza topped with pepperoni slices and melted cheese.', 'https://example.com/pizza.jpg', 1, 10.99, 100, 0, 0),
  ('Vegetarian Pad Thai', 'A Thai noodle dish made with vegetables, tofu, and peanuts.', 'https://example.com/pad-thai.jpg', 2, 8.99, 50, 1, 10),
  ('Grilled Chicken Sandwich', 'A sandwich with grilled chicken, lettuce, tomato, and mayo.', 'https://example.com/chicken-sandwich.jpg', 3, 7.99, 75, 0, 0),
  ('Mango Smoothie', 'A smoothie made with mango, yogurt, and honey.', 'https://example.com/mango-smoothie.jpg', 4, 4.99, 25, 1, 20),
  ('Cheeseburger', 'A burger with a beef patty, cheese, lettuce, tomato, and ketchup.', 'https://example.com/cheeseburger.jpg', 3, 9.99, 90, 0, 0),
  ('Chocolate Chip Cookies', 'Homemade chocolate chip cookies made with butter and brown sugar.', 'https://example.com/cookies.jpg', 5, 3.99, 150, 1, 15),
  ('Beef Stir Fry', 'A Chinese stir-fry with beef, vegetables, and rice.', 'https://example.com/stir-fry.jpg', 2, 11.99, 60, 0, 0),
  ('Greek Salad', 'A salad with feta cheese, olives, tomatoes, cucumbers, and a vinaigrette dressing.', 'https://example.com/salad.jpg', 4, 6.99, 40, 1, 25);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
